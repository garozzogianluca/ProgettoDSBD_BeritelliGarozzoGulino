apiVersion: v1
kind: Service
metadata:
  name: mongo-1
spec:
  ports:
    - port: 27017
      #targetPort: 9376
      protocol: TCP
      name: http
  selector:
    app: mongo-feedback
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-2
spec:
  ports:
    - port: 27018
      protocol: TCP
      name: http
  selector:
    app: mongo-event
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
    - port: 3306
      protocol: TCP
      name: http
  selector:
    app: mysql
---
# Viene definito il volume persistente e definisce la quantità di spazio di archivazione
# in spec.capacity.storage
# in spec.hostpath specifica il punto di montaggio del volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
# Definire la pvc (persistent volume claim)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
# Definire il segreto per l'archiviazione della password di mysql
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
stringData:
  password: root
---
# Deployment che definisce le risorse che la distribuzione mysql utilizzerà
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - image: mysql:latest
          name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "root"
            - name: MYSQL_ROOT_USER
              value: "root"
            - name: MYSQL_DATABASE
              value: "MS0"
          envFrom:
            - secretRef:
                name: mysql-secret
          ports:
            - containerPort: 3306
              name: mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
---
# Mongo
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-feedback
spec:
  selector:
    matchLabels:
      app: mongo-feedback
  template:
    metadata:
      labels:
        app: mongo-feedback
    spec:
      containers:
        - name: mongo-feedback
          image: mongo:latest
          ports:
            - containerPort: 27017
          #imagePullPolicy: Never #Per evitare che K8s scarichi l'immagine
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-event
spec:
  selector:
    matchLabels:
      app: mongo-event
  template:
    metadata:
      labels:
        app: mongo-event
    spec:
      containers:
        - name: mongo-event
          image: mongo:latest
          ports:
            - containerPort: 27018
          #imagePullPolicy: Never #Per evitare che K8s scarichi l'immagine